{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { shoes } from './Products';\nexport const basketSlice = createSlice({\n  name: \"Basket\",\n  initialState: {\n    shoes: [],\n    totalvalue: [],\n    total: 0\n  },\n  reducers: {\n    add: (state, action) => {\n      state.shoes.push(action.payload);\n      state.totalvalue.push(shoes[action.payload].price);\n      state.total = state.totalvalue.reduce((total, num) => {\n        return total + num;\n      });\n    },\n    remove: (state, action) => {\n      state.shoes = state.shoes.filter(function (value, index, arr) {\n        return value !== action.payload;\n      });\n      state.totalvalue = [];\n      state.shoes.map(shoe => {\n        state.totalvalue.push(shoes[shoe].price);\n      });\n      console.log('line 25', state.totalvalue);\n      state.total = state.totalvalue.reduce((total, num) => {\n        return total + num;\n      }); // state.total=state.totalvalue.reduce((total,num)=>{\n      //         return total+num\n      // })\n    },\n    empty: state => {\n      state.shoes = [];\n      state.total = 0;\n    }\n  }\n});\nexport const {\n  add,\n  empty,\n  remove\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"sources":["C:/Users/abdul/Desktop/Expense/shoe-store/src/BasketSlice.js"],"names":["createSlice","shoes","basketSlice","name","initialState","totalvalue","total","reducers","add","state","action","push","payload","price","reduce","num","remove","filter","value","index","arr","map","shoe","console","log","empty","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,KAAR,QAAoB,YAApB;AAEA,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;AACnCG,EAAAA,IAAI,EAAE,QAD6B;AAEnCC,EAAAA,YAAY,EAAG;AACXH,IAAAA,KAAK,EAAC,EADK;AAEXI,IAAAA,UAAU,EAAE,EAFD;AAGXC,IAAAA,KAAK,EAAC;AAHK,GAFoB;AAOnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,GAAG,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACdD,MAAAA,KAAK,CAACR,KAAN,CAAYU,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;AACAH,MAAAA,KAAK,CAACJ,UAAN,CAAiBM,IAAjB,CAAsBV,KAAK,CAACS,MAAM,CAACE,OAAR,CAAL,CAAsBC,KAA5C;AACAJ,MAAAA,KAAK,CAACH,KAAN,GAAYG,KAAK,CAACJ,UAAN,CAAiBS,MAAjB,CAAwB,CAACR,KAAD,EAAOS,GAAP,KAAa;AAC3C,eAAOT,KAAK,GAACS,GAAb;AACL,OAFW,CAAZ;AAGL,KAPK;AAQNC,IAAAA,MAAM,EAAC,CAACP,KAAD,EAAOC,MAAP,KAAgB;AACnBD,MAAAA,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACR,KAAN,CAAYgB,MAAZ,CAAmB,UAASC,KAAT,EAAgBC,KAAhB,EAAuBC,GAAvB,EAA2B;AACxD,eAAOF,KAAK,KAAKR,MAAM,CAACE,OAAxB;AACH,OAFa,CAAd;AAGAH,MAAAA,KAAK,CAACJ,UAAN,GAAiB,EAAjB;AACAI,MAAAA,KAAK,CAACR,KAAN,CAAYoB,GAAZ,CAAiBC,IAAD,IAAQ;AAEpBb,QAAAA,KAAK,CAACJ,UAAN,CAAiBM,IAAjB,CAAsBV,KAAK,CAACqB,IAAD,CAAL,CAAYT,KAAlC;AACH,OAHD;AAIAU,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBf,KAAK,CAACJ,UAA5B;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAYG,KAAK,CAACJ,UAAN,CAAiBS,MAAjB,CAAwB,CAACR,KAAD,EAAOS,GAAP,KAAa;AAC7C,eAAOT,KAAK,GAACS,GAAb;AACL,OAFa,CAAZ,CAVmB,CAcnB;AACA;AACA;AACL,KAzBO;AA0BNU,IAAAA,KAAK,EAAEhB,KAAD,IAAS;AACXA,MAAAA,KAAK,CAACR,KAAN,GAAY,EAAZ;AACAQ,MAAAA,KAAK,CAACH,KAAN,GAAc,CAAd;AACL;AA7BO;AAPyB,CAAD,CAA/B;AAyCP,OAAO,MAAM;AAAEE,EAAAA,GAAF;AAAOiB,EAAAA,KAAP;AAAcT,EAAAA;AAAd,IAAyBd,WAAW,CAACwB,OAA3C;AACP,eAAexB,WAAW,CAACyB,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {shoes} from './Products'\r\n\r\nexport const basketSlice = createSlice({\r\n    name: \"Basket\",\r\n    initialState : {\r\n        shoes:[],\r\n        totalvalue: [],\r\n        total:0\r\n    },\r\n    reducers: {\r\n        add:(state,action)=>{\r\n              state.shoes.push(action.payload)\r\n              state.totalvalue.push(shoes[action.payload].price)\r\n              state.total=state.totalvalue.reduce((total,num)=>{\r\n                    return total+num\r\n              })\r\n        },\r\n        remove:(state,action)=>{\r\n            state.shoes = state.shoes.filter(function(value, index, arr){ \r\n                return value !== action.payload;\r\n            });\r\n            state.totalvalue=[]\r\n            state.shoes.map((shoe)=>{\r\n                \r\n                state.totalvalue.push(shoes[shoe].price)\r\n            })\r\n            console.log('line 25',state.totalvalue)\r\n            state.total=state.totalvalue.reduce((total,num)=>{\r\n                return total+num\r\n          })\r\n\r\n            // state.total=state.totalvalue.reduce((total,num)=>{\r\n            //         return total+num\r\n            // })\r\n      },\r\n        empty:(state)=>{\r\n            state.shoes=[]\r\n            state.total = 0\r\n      }\r\n\r\n    }\r\n});\r\n\r\nexport const { add, empty, remove } = basketSlice.actions;\r\nexport default basketSlice.reducer;"]},"metadata":{},"sourceType":"module"}