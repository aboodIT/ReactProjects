{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul\\\\Desktop\\\\Expense\\\\shoe-store\\\\src\\\\FormComponents\\\\PersonalInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Templatefield from './template';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  divider: {\n    marginBottom: 10\n  }\n}));\nlet schema = yup.object().shape({\n  firstName: yup.string().required('This field is required.'),\n  lastName: yup.string().required('This field is required.'),\n  email: yup.string().email().required('This field is required.'),\n  password: yup.string().min(6, 'Password is too short.').max(20, 'Password is too long.').required('This field is required.')\n});\n\nfunction PersonalInfo({\n  step,\n  setForm,\n  state\n}) {\n  _s();\n\n  const classes = useStyles();\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: state,\n        validationSchema: schema,\n        onSubmit: values => {\n          setForm({ ...values\n          });\n          console.log(\"state\", state);\n          step(s => s + 1);\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              className: classes.divider,\n              children: /*#__PURE__*/_jsxDEV(Templatefield, {\n                name: \"firstName\",\n                label: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              className: classes.divider,\n              children: /*#__PURE__*/_jsxDEV(Templatefield, {\n                name: \"lastName\",\n                label: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: classes.divider,\n            children: /*#__PURE__*/_jsxDEV(Templatefield, {\n              name: \"email\",\n              label: \"Email\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: classes.divider,\n            children: /*#__PURE__*/_jsxDEV(Templatefield, {\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            id: \"next\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PersonalInfo, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PersonalInfo;\nexport default PersonalInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalInfo\");","map":{"version":3,"sources":["C:/Users/abdul/Desktop/Expense/shoe-store/src/FormComponents/PersonalInfo.jsx"],"names":["React","useState","Formik","Form","yup","Button","CssBaseline","Grid","makeStyles","Container","Templatefield","useStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","divider","marginBottom","schema","object","shape","firstName","string","required","lastName","email","password","min","max","PersonalInfo","step","setForm","state","classes","console","log","values","s"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Templatefield from './template'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    divider: {\r\n        marginBottom: 10,\r\n    }\r\n}));\r\n\r\nlet schema = yup.object().shape({\r\n    firstName: yup.string().required('This field is required.'),\r\n    lastName: yup.string().required('This field is required.'),\r\n    email: yup.string().email().required('This field is required.'),\r\n    password: yup.string()\r\n        .min(6, 'Password is too short.')\r\n        .max(20, 'Password is too long.')\r\n        .required('This field is required.')\r\n});\r\n\r\n\r\nfunction PersonalInfo({ step, setForm, state }) {\r\n\r\n    const classes = useStyles();\r\n    console.log(state)\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Formik\r\n                    initialValues={state}\r\n                    validationSchema={schema}\r\n                    onSubmit={(values) => {\r\n                        setForm({ ...values })\r\n                        console.log(\"state\", state)\r\n                        step(s => s + 1)\r\n                    }\r\n                    }>\r\n                    <Form className={classes.form}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={6} className={classes.divider}>\r\n                                <Templatefield\r\n                                    name=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={6} className={classes.divider}>\r\n                                <Templatefield\r\n                                    name=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.divider}>\r\n                            <Templatefield\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                type='email'\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.divider}>\r\n                            <Templatefield\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type='password'\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            id=\"next\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Next\r\n                    </Button>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PersonalInfo;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}